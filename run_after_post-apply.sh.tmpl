#!/usr/bin/env bash
# vim: set filetype=bash: Vim doesn't handle .sh.tmpl well

# TODO: split each into its own script

set -ueo pipefail
pushd "$(mktemp -d)" > /dev/null 2>&1





#####################################################
# CONVENIENCE FUNCTIONS #############################
#####################################################

chezlog() {
    printf "[chezmoi] $1\n"
}

prompt_yn() {
    while true; do
        read -p "$1 (y/n)? " yn
        case $yn in
            [Yy]* ) return 1;;
            [Nn]* ) return 0;;
        esac
    done
}

check() {
    chezlog "Checking if $1 is installed"
    if ! which $1 > /dev/null 2>&1; then
        return 1
    fi
    chezlog "$1 executable found at $(which $1)"
    return 0
}

#####################################################
#####################################################
#####################################################







#####################################################
# HOMEBREW ##########################################
#####################################################

echo
if ! check brew; then
    chezlog "Homebrew installation not found"
    {{ if .has_root }}
    chezlog "Installing Homebrew as root"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    {{ else }}
    chezlog "Installing Homebrew to ~/.homebrew"
    mkdir -p $HOME/.homebrew
    pushd $HOME
    curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C .homebrew
    eval "$(.homebrew/bin/brew shellenv)"
    brew update --force --quiet
    chmod -R go-w "$(brew --prefix)/share/zsh"
    popd
    {{ end }}
    chezlog "Successfully installed Homebrew"
fi

echo
chezlog "Using brew bundle with the following Brewfile:\n"

{{ if .has_root }}
cat {{ .chezmoi.sourceDir -}}/Brewfile_extra_if_has_root | tee -a Brewfile
{{ else }}
cat {{ .chezmoi.sourceDir -}}/Brewfile_extra_if_not_root | tee -a Brewfile
{{ end }}
cat {{ .chezmoi.sourceDir -}}/Brewfile_default | tee -a Brewfile

{{ if .has_root }}
brew bundle
{{ else }}
HOMEBREW_CASK_OPTS="--appdir=~/Applications" brew bundle
{{ end }}
chezlog "Successfully ran brew bundle"

#####################################################
#####################################################
#####################################################






#####################################################
# PYTHON ############################################
#####################################################

echo
chezlog "Installing Python 3.10.0 with pyenv"
pyenv install --skip-existing 3.10.0
pyenv global 3.10.0
chezlog "Successfully installed Python 3.10.0 with pyenv"

echo
chezlog "Installing the following Python packages"
cat {{ .chezmoi.sourceDir -}}/requirements.txt | tee -a reqs.txt
pip install -r reqs.txt
chezlog "Successfully installed the above packages"

#####################################################
#####################################################
#####################################################





#####################################################
# FISH ##############################################
#####################################################

echo
if ! check fish; then
    chezlog "fish installation not found"
    chezlog "Installing fish with brew"
    brew install fish
    chezlog "Successfully installed fish"
fi

echo
chezlog "Checking if login shell is set to fish"
if [[ $SHELL != `which fish` ]]; then
    chezlog "Login shell is currently $SHELL"
    chezlog "Attempting to set the login shell to $(which fish)"
    while ! chsh -s `which fish`; do
        if prompt_yn "Failed, try again"; then
            break;
        fi
        chezlog "Trying again"
    done
else
    chezlog "Login shell is set to fish"
fi

echo
if ! fish -c 'fisher' > /dev/null 2>&1; then
    fish -c 'curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher'
    chezlog "Successfully installed fisher"
fi


# plugins are tracked automatically, just run
#          fisher install <plugin>
# no need to add the plugin below.
echo
chezlog "Updating fisher and re-installing plugins"
fish -c 'fisher update'  
chezlog "Successfully updated fisher and re-installed plugins"

#####################################################
#####################################################
#####################################################







#####################################################
# DEFAULTS ##########################################
#####################################################

defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder 1
defaults write com.googlecode.iterm2 PrefsCustomFolder ~/.config/iterm2

#####################################################
#####################################################
#####################################################






#####################################################
# INSTALL DOOM EMACS ################################
#####################################################

if [ ! -d "$HOME/.emacs.d" ]; then
	git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
	~/.emacs.d/bin/doom install 
else
	chezlog "Error installing Doom Emacs, ~/.emacs.d already exists!"
fi

#####################################################
#####################################################
#####################################################


popd > /dev/null 2>&1
